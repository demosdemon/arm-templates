{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.2",
  "parameters": {
    "diagnosticsStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "Where to store the diagnostics"
      }
    },
    "diagnosticsStorageAccountResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The resource group containing the diagnostic storage account."
      }
    },
    "secrets": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Secrets passed to the VM"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account where the vm disks live."
      }
    },
    "storageType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS"
      ],
      "metadata": {
        "description": "Which type of storage you want to use"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Local name for the VM can be whatever you want"
      }
    },
    "vmAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "VM admin user name"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "VM admin password. The supplied password must be between 8-123 characters long and must satisfy at least 3 of password complexity requirements from the following: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Desired Size of the VM. Any valid option accepted but if you choose premium storage type you must choose a DS class VM size."
      },
      "defaultValue": "Standard_DS2"
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "chocoPackages": {
      "type": "string",
      "metadata": {
        "description": "List of Chocolatey packages to install separated by a semi-colon eg. linqpad;sysinternals"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "the location for all the resources."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "https://raw.githubusercontent.com/demosdemon/arm-templates/master/vs-dev"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    },
    "_artifacts": {
      "type": "array",
      "defaultValue": [
        "https://raw.githubusercontent.com/demosdemon/arm-templates/master/vs-dev/scripts/Setup.ps1",
        "https://raw.githubusercontent.com/demosdemon/arm-templates/master/vs-dev/scripts/SetupChocolatey.ps1",
        "https://raw.githubusercontent.com/demosdemon/arm-templates/master/vs-dev/secrets/isesteroids.license.enc"
      ]
    }
  },
  "variables": {
    "vnet01Prefix": "172.16.128.0/17",
    "vnet01Subnet1Name": "Subnet-1",
    "vnet01Subnet1Prefix": "172.16.128.0/24",
    "vmOSDiskName": "[concat(parameters('vmName'), 'OSDisk')]",
    "vnetName": "[concat(parameters('vmName'), 'VNet')]",
    "nsgName": "[concat(variables('vnetName'), '-nsg')]",
    "vmVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "vmSubnetRef": "[concat(variables('VMVnetID'), '/subnets/', variables('Vnet01Subnet1Name'))]",
    "vmStorageAccountContainerName": "vhds",
    "vmNicName": "[concat(parameters('vmName'), 'NIC01')]",
    "vmIP01Name": "[concat(parameters('vmName'), 'IP01')]",
    "vmIP01Ref": "[resourceID('Microsoft.Network/publicIPAddresses', variables('vmIP01Name'))]",
    "nsgRules": [{
        "name": "allow-rdp",
        "protocol": "*",
        "ports": "3389"
      },
      {
        "name": "allow-http",
        "protocol": "Tcp",
        "ports": "80"
      },
      {
        "name": "allow-https",
        "protocol": "Tcp",
        "ports": "443"
      },
      {
        "name": "allow-winrm",
        "protocol": "Tcp",
        "ports": "5986"
      }
    ]
  },
  "resources": [{
      "name": "[parameters('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "Storage01"
      },
      "properties": {
        "accountType": "[parameters('storageType')]"
      }
    },
    {
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "VNet01"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet01Prefix')]"
          ]
        },
        "subnets": [{
          "name": "[variables('vnet01Subnet1Name')]",
          "properties": {
            "addressPrefix": "[variables('vnet01Subnet1Prefix')]"
          }
        }]
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "copy": [{
          "name": "securityRules",
          "count": "[length(variables('nsgRules'))]",
          "input": {
            "name": "[variables('nsgRules')[copyIndex('securityRules')].name]",
            "properties": {
              "description": "[variables('nsgRules')[copyIndex('securityRules')].name]",
              "protocol": "[variables('nsgRules')[copyIndex('securityRules')].protocol]",
              "sourcePortRange": "*",
              "destinationPortRange": "[variables('nsgRules')[copyIndex('securityRules')].ports]",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": "[copyIndex('securityRules', 1000)]",
              "direction": "Inbound"
            }
          }
        }]
      }
    },
    {
      "name": "[variables('vmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('vmVnetID')]",
        "[variables('vmIP01Ref')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "tags": {
        "displayName": "VMNic01"
      },
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        },
        "ipConfigurations": [{
          "name": "ipconfig1",
          "properties": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
              "id": "[variables('vmSubnetRef')]"
            },
            "publicIPAddress": {
              "id": "[variables('vmIP01Ref')]"
            }
          }
        }]
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('location')]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
      ],
      "tags": {
        "displayName": "VM01"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "VMOSDisk",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": 250,
            "managedDisk": {
              "storageAccountType": "[parameters('storageType')]"
            }
          }
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "timeZone": "Central Standard Time"
          },
          "secrets": "[parameters('secrets')]"
        },
        "networkProfile": {
          "networkInterfaces": [{
            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
          }]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId(parameters('diagnosticsStorageAccountResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccount')), '2017-10-01').primaryEndpoints.blob]"
          }
        }
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "name": "[variables('vmIP01Name')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "VMIP01"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "name": "[concat(parameters('vmName'), '/BGInfo')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('vmName'), '-SetupDiagnostics'))]"
      ],
      "tags": {
        "displayName": "BGInfo"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true
      }
    },
    {
      "name": "[concat(parameters('vmName'), '-SetupDiagnostics')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/demosdemon/arm-templates/master/Microsoft.Compute/virtualMachines/extensions/diagnostics.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualMachineName": {
            "value": "[parameters('vmName')]"
          },
          "storageAccountResourceGroup": {
            "value": "[parameters('diagnosticsStorageAccountResourceGroup')]"
          },
          "storageAccountName": {
            "value": "[parameters('diagnosticsStorageAccount')]"
          }
        }
      }
    },
    {
      "name": "[concat(parameters('vmName'), '-SetupScript')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'BGInfo')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/subtemplates/setupscript.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifacts": {
            "value": "[parameters('_artifacts')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "vmAdminUserName": {
            "value": "[parameters('vmAdminUserName')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "chocoPackages": {
            "value": "[parameters('chocoPackages')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
